class Solution {
public:
    vector<vector<string>>ans;
	vector<string>tempString;
    vector<vector<string>> partition(string s) {
        if (s.size() == 0){
            return ans;
        }
        
        dfs(0,s);
        return ans;
    }
    void dfs(int i, string s){
        if (i == s.size()){
            ans.push_back(tempString);
        }
        
        if (i < s.size()){
            for (int j = i; j < s.size(); j++){
                if (isHui(s.substr(i, j-i + 1))){
                    tempString.push_back(s.substr(i, j - i + 1));
                    dfs(j + 1, s);
                    tempString.pop_back();
                }
            }
        }
    }
    bool isHui(string s ){
        int start = 0;
        int end = s.size() - 1;
        while(start < end){
            if (s[start] == s[end]){
                start++; 
                end--;
            }
            else{
                return false;
            }
        }
        return true;
    }
};
